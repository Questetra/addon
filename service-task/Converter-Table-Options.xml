<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>Converter (Table to Options)</label>
<label locale="ja">コンバータ (Table to Options)</label>

<last-modified>2018-11-14</last-modified>
<help-page-url>https://support.questetra.com/ja/addons/converter-table-options/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/addons/converter-table-options/</help-page-url>

<summary>Convert IDs-Labels defined in Table data to two String type data items. (In order to base registration as Options XML, refer to two String type data from Select type data. Then, refer to the Select type data from [Service Task (Choices Update)].)</summary>
<summary locale="ja">テーブル型データ項目（1列目2列目）に格納されたID(value)-Label(display)を、２つの複数行文字列型に格納します。（選択肢XMLとして基盤登録するには、選択肢型データで２つの文字列型データを参照します。その後、［サービスタスク（選択肢マスタ更新）］から当該選択肢型データを参照します）</summary>

<configs>
  <config name="conf_DataIdA" required="true" form-type="SELECT" select-data-type="LIST">
    <label>A: Select TABLE DATA for IDs and Labels (Options)</label>
    <label locale="ja">A: IDおよびラベル情報（選択肢情報）が格納されているテーブル型データを選択してください</label>
  </config>
  <config name="conf_DataIdB" required="true" form-type="SELECT" select-data-type="STRING_TEXTAREA">
    <label>B: Select STRING DATA for IDs (update)</label>
    <label locale="ja">B: ID情報が格納される文字列型データを選択してください（更新）</label>
  </config>
  <config name="conf_DataIdC" required="true" form-type="SELECT" select-data-type="STRING_TEXTAREA">
    <label>C: Select STRING DATA for LABELs (update)</label>
    <label locale="ja">C: LABEL情報が格納される文字列型データを選択してください（更新）</label>
  </config>
</configs>

<engine-type>1</engine-type>

<script><![CDATA[
// Converter from Table to IDs String and Labels String for Options-XML
// (c) 2018, Questetra, Inc. (the MIT License)

//////// START "main()" ////////
main();
function main(){

//// == Config Retrieving / 工程コンフィグの参照 ==
const dataIdA = configs.get( "conf_DataIdA" ) + "";
const dataIdB = configs.get( "conf_DataIdB" ) + "";
const dataIdC = configs.get( "conf_DataIdC" ) + "";

//// == Data Retrieving / ワークフローデータの参照 ==
const myTable = engine.findDataByNumber( dataIdA );
// com.questetra.bpms.core.model.formdata.ListArray (BPMS Table)
if( myTable === null){
  throw new Error( "Source Table data is NULL" );
}
const myTableSize = myTable.size() - 0;

//// == Calculating / 演算 ==
let tmpIds = "";
let tmpLabels = "";
for (let i=0; i < myTableSize; i++){
  tmpIds    += myTable.get(i, 0) + "";
  tmpLabels += myTable.get(i, 1) + "";
  if( i !== myTableSize - 1 ){
    tmpIds    += "\n";
    tmpLabels += "\n";
  }
}

//// == Data Updating / ワークフローデータへの代入 ==
engine.setDataByNumber( dataIdB, tmpIds );
engine.setDataByNumber( dataIdC, tmpLabels );

} //////// END "main()" ////////

]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACx0lEQVRYR8WXz0sUYRjHP5O0CLX+
uHTIQ7sHIby0BdIh0EU6hwmd20Vx9mb9AUvlQQSRVhBq0WW3gxcFKzx4000kBKO2QNgSssgS6uDu
oQQJJt4ZZ3ecH+s4O+kLyy7s+z7fz/PM87zPMxKnvKRj6afpBbpRiCDRAkQOzhdQKCEhvvMkeOnW
7tEAWVrYZwi4B6qom1UCUgSYII747bhqAzwhxhkeH0PYLCTE48i8cCJwBnhKCkn13I+VQua+nSF7
gDQ54K4fyhUbCjkSxM02rQD+en5YT2GChJpLlXUYQHvmWV89txq7bcyJKoCW7Vt1JJxb7hIBwnp1
VAHSPAQeuLVSa99U1xTzW/Msflt02vYIWdXDCCBKptkPgI07GzQFmhhcGXSCKCHTWgXQbrjnRvGe
iz20nWvzxJO8lqS9uZ3t39u1INRc0CJgk/nCi47WDk8AxkOOEAcVoQGkyat3vGH5BbD3d4/RwijD
b4fNzrxCJqoDfAEuGXdMd03TeaHTUwRC50NqDgjx8Q/jJN8k7ewUkLmqAyielBwOieiFg+Fa4tpJ
GelIgODZIJnuDDt/dhh67a41rN5aZfnHspPnVWwDgOURiF1CPBvN0hvqJfcxx8DKgH+BUnhPgohj
EhrFG6QG1n6usVne9ASw9H2J3CfR3w4tQxLalOHszVn6wn0I8XpXppixRs9UhpaLaPLGJP2X+2ls
aKxXH1sAMFxE2l1guYqNEHOf51j4uuAJplgqsv5r3Xi2jKyNd0c2Ix1iZnPGzyS0aUZaOxbVYGlI
Y9fH2N3fZeTdiKcImA6VCRCytmOx61QHEh3zf45kUAm9LndyQyk8QyZmfoYnNZZbPK8dAf1fbVAR
V5jXSakMxLy9mOgQWnWIUVp83IIIYfFqlqrv1cz8wEREFKJIRFBoQeKKukU0FokSCgUk8rU8dp8D
flS8Cxv/AFp57iGwqv7bAAAAAElFTkSuQmCC
</icon>

</service-task-definition>
