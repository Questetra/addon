<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>TSV Filtering by Number</label>
<label locale="ja">数値によるTSVフィルタ</label>

<last-modified>2018-11-14</last-modified>
<help-page-url>https://support.questetra.com/addons/tsv-filteringbynumber/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/tsv-filteringbynumber/</help-page-url>

<configs>
  <config name="conf_DataIdA" required="true" form-type="SELECT" select-data-type="STRING">
    <label>A: Select TSV STRING DATA</label>
    <label locale="ja">A: TSVデータが格納されている文字列型データ項目を選択してください</label>
  </config>
  <config name="conf_FilterColumn" required="true" el-enabled="true" form-type="TEXTFIELD">
    <label>B: Set Column ID for Filter (e.g. "0")</label>
    <label locale="ja">B: フィルタが適用される数値列のIDをセットしてください (例 "0")</label>
  </config>
  <config name="conf_FilterMin" required="false" el-enabled="true" form-type="TEXTFIELD">
    <label>C: Set Minimum Value of Numeric Filter (e.g. "0")</label>
    <label locale="ja">C: 数値フィルタの範囲最小値をセットしてください (例 "0")</label>
  </config>
  <config name="conf_FilterMax" required="false" el-enabled="true" form-type="TEXTFIELD">
    <label>D: Set Maximum Value of Numeric Filter (e.g. "99999")</label>
    <label locale="ja">D: 数値フィルタの範囲最大値をセットしてください (例 "99999")</label>
  </config>
  <config name="conf_DataIdE" required="true" form-type="SELECT" select-data-type="STRING_TEXTAREA">
    <label>E: Select STRING DATA for Generated TSV (update)</label>
    <label locale="ja">E: 生成TSVが格納される文字列型データ項目を選択してください（更新）</label>
  </config>
</configs>

<engine-type>1</engine-type>

<script><![CDATA[
// (c) 2018, Questetra, Inc. (the MIT License)


//////// START "main()" ////////
main();
function main(){


//// == Config Retrieving / 工程コンフィグの参照 ==
const dataIdA = configs.get( "conf_DataIdA" ) + "";
const dataIdE = configs.get( "conf_DataIdE" ) + "";
// 'java.lang.String' (String Obj) to javascript primitive 'string'
// https://wiki.openjdk.java.net/display/Nashorn/Rhino+Migration+Guide#RhinoMigrationGuide-JavaScriptvsJavaStrings
// https://docs.oracle.com/javase/8/docs/technotes/guides/scripting/nashorn/api.html#sthref21

const filterColumn = configs.get( "conf_FilterColumn" ) - 0;
let   filterMin    = configs.get( "conf_FilterMin" )    + "";
  if( filterMin !== "" ){ filterMin = parseInt(filterMin); }
let   filterMax    = configs.get( "conf_FilterMax" )    + "";
  if( filterMax !== "" ){ filterMax = parseInt(filterMax); }
if( filterMin === "" && filterMax === "" ){
  throw new Error( "Illegal Filter Modeling: NULL to NULL" );
}


//// == Data Retrieving / ワークフローデータの参照 ==
let   myTsv  = engine.findDataByNumber( dataIdA );
if( myTsv  !== null ){ myTsv += ""; }else{
  throw new Error( "Source TSV data is NULL" );
}


//// == Calculating / 演算 ==
let   newTsv   = "";
const arrMyTsv = myTsv.split("\n"); // string[]
engine.log( "Filter: " + filterMin + " - " + filterMax );

if( filterMin !== "" && filterMax !== "" ){
  for( let i = 0; i < arrMyTsv.length; i++ ){
    let arrMyCellValues = arrMyTsv[i].split("\t");
    if( parseInt(arrMyCellValues[filterColumn]) >= filterMin
     && parseInt(arrMyCellValues[filterColumn]) <= filterMax ){
      newTsv += arrMyTsv[i];
      if( i !== arrMyTsv.length - 1 ){
        newTsv += "\n";
      }
    }
  }
}else if( filterMin === "" && filterMax !== "" ){
  for( let i = 0; i < arrMyTsv.length; i++ ){
    let arrMyCellValues = arrMyTsv[i].split("\t");
    if( parseInt(arrMyCellValues[filterColumn]) <= filterMax ){
      newTsv += arrMyTsv[i];
      if( i !== arrMyTsv.length - 1 ){
        newTsv += "\n";
      }
    }
  }
}else if( filterMin !== "" && filterMax === "" ){
  for( let i = 0; i < arrMyTsv.length; i++ ){
    let arrMyCellValues = arrMyTsv[i].split("\t");
    if( parseInt(arrMyCellValues[filterColumn]) >= filterMin ){
      newTsv += arrMyTsv[i];
      if( i !== arrMyTsv.length - 1 ){
        newTsv += "\n";
      }
    }
  }
}


//// == Data Updating / ワークフローデータへの代入 ==
engine.setDataByNumber( dataIdE, newTsv );


} //////// END "main()" ////////

]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADzklEQVRYR8WXX0hUaRjGf8dcW21t
Zi0NcylFa3ddsllkg6I2k+qytKtuZB2kjmW0CtFlGnQhFa1zETlQlAVd5ga7EEE2LUVdaCiFXSTM
LPkHdgRnnM1NV/fEd45nPJ45Z+ZMWvvCMAe+77zP873f8/45Ev+zSWnh+6kBdqPgQcINeObf70ch
goT4D9DIXad+UxO4jpsZfgaaQQV1YhGggyx8eBHPtpacwBXqyeCXNIDNQALci8yvdgzsCXTSgaSe
fDmsA5kWK0fWBPzcAH5aDuS4D4UbNOI1+0wkYHHycnc5B4oPsK1gGyW5JRTmFJKTmbPIV/ifMOF3
YV5NvCIwFuBO8A6xf2OL8RR8NKpaittiAtqdX9dX6zbV0bKlhYo1FWRIGUzOTDLydoTRqVHGpsbi
TlZIKyhdXUr+5/kquezMbKZmp7j35h4XBi7w7K9nRsxaoyYWCGhqD+qCO731NGcqzzD73yzdwW7V
0WBk0NGt1BbX0rylmR3rdhD6O0RdT52RRIQsSvTsWCDgpw1o1RGu/ngV79deOgc7aXrS5AjYvOn5
oeeUucpoetzErde3jMtnkVU8jAREyriMBBq+aWD83Ti+Fz58L32Jd2pDS2imtbKVmpIapuemrQhE
kPlygYBW4bqN/vy7/Bz59gjSPEfhSIgsFAsRjAWJzcToG+/DleWiIq9CvffNrs1s+GID7pVuhC6E
RWeiHH98nNtDt810VS1oEbBQ/uHSw1zeeZm8lXkfFH79pd5wL9W/VdtmhEbAT0Ct8SY7Vn6Mtso2
CrIL0iahoCDATz45ac4C3dcjZKp0AiFgoxVKVWEVl7ZfwrNW9J/UrUP4UDMn1E3Do4ZkuulH5nud
gJLsiLmf5XJt9zVEemVmZCaNxsT0BO397ZwfOJ86ajKSIwK6p3M/nOPEdydU4VnZ0OQQp56e4u6f
DruxgYDtFZiBDm48yMXtFylbXRZfmlPmuD98n6N/HGX47XDqk4sdCgM04kkqQjtP+4r20bWnSy27
wh6OPlSVnqYZRJhm661eX83NPTcpWlWkYj4YecDe3/emhz/fmPQIJBSiZN6WhQAYCpFWCxaV4o9M
IIqsjXe2zegjE7BoRlo7FtlgnWMGRku8gihZFCe2YwFgGkjsorBEAjYDiY7mICNEZdz/1f74WCam
pJ7RHidZEA+9vvnTDaXQhUy9meWnGssTTp48AvqqNqiIET2lMG3iHwXqP+zDRPeoZYcYpcXPKREB
LD7NOpb2aWY+loiIQhUSHhTcSGxVt4jGIhFBoR+JQLITO9eAE00vw573b4FfMJJdOBgAAAAASUVO
RK5CYII=
</icon>

</service-task-definition>
