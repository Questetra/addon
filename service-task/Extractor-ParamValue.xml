<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>Extract Value from Query String</label>
<label locale="ja">クエリ文字列 から Value 抽出</label>

<summary>Extracts the value of the specified parameter from the serialized query-string (e.g. "a=123&amp;b=456") and stores it as workflow data</summary>
<summary locale="ja">シリアライズされたクエリ文字列（例 "a=123&amp;b=456"）から、指定パラメータの値（value）を抽出し、ワークフローデータとして格納します</summary>

<help-page-url>https://support.questetra.com/addons/extractor-serialized-string/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/extractor-serialized-string/</help-page-url>

<last-modified>2018-11-29</last-modified>

<configs>
  <config name="conf_DataIdA" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD|STRING_TEXTAREA">
    <label>A: Select STRING DATA for Query String</label>
    <label locale="ja">A: クエリ文字列（Serialized Data）が格納されている文字列型データを選択してください</label>
  </config>
  <config name="conf_ParamName" required="true" el-enabled="true" form-type="TEXTFIELD">
    <label>B: Set Name of Parameter (e.g. 'a' "a=123&amp;b=456")</label>
    <label locale="ja">B: パラメータ名をセットしてください (例 'a' "a=123&amp;b=456")</label>
  </config>
  <config name="conf_DataIdC" required="true" form-type="SELECT" select-data-type="STRING_TEXTFIELD|DECIMAL">
    <label>C: Select STRING/NUMERIC DATA for Extacted Value (update)</label>
    <label locale="ja">C: 抽出値（Value）が格納される文字列型or数値型データを選択してください (更新)</label>
  </config>
</configs>

<engine-type>1</engine-type>

<script><![CDATA[
// (c) 2018, Questetra, Inc. (the MIT License)

// About "serialize" or "Query String"
// - see https://api.jquery.com/serialize/


//////// START "main()" ////////
main();
function main(){

//// == Config Retrieving / 工程コンフィグの参照 ==
const dataIdA = configs.get( "conf_DataIdA" ) + "";
const dataIdC = configs.get( "conf_DataIdC" ) + "";
const paramName = configs.get( "conf_ParamName" ) + "";
// 'java.lang.String' (String Obj) to javascript primitive 'string'

//// == Data Retrieving / ワークフローデータの参照 ==
const queryString = engine.findDataByNumber( dataIdA ) + "";

//// == Calculating / 演算 ==
let paramValue = getParam(paramName, queryString);

//// == Data Updating / ワークフローデータへの代入 ==
if(paramValue === null){
  throw new Error( 'PARAMETER "' + paramName + '" is not found.' );
}
if( engine.findDataDefinitionByNumber( dataIdC ).matchDataType( "DECIMAL" ) ){
  var returnValue =  parseFloat( paramValue );
  engine.setDataByNumber( dataIdC, new java.math.BigDecimal(returnValue) );
}else{
  engine.setDataByNumber( dataIdC, paramValue );
}

} //////// END "main()" ////////


function getParam(name, querystr) {
  name = name.replace(/[\[\]]/g, "\\$&");
  var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)");
  var results = regex.exec(querystr);
  if (!results) return null;
  if (!results[2]) return '';
  return decodeURIComponent(results[2].replace(/\+/g, " "));
}

]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAESklEQVRYR8WXb0iVdxTHP486qVbT
Yhgsh0WZQ8zuCkLGVi5Grb2IORpEUV7BuPdF6dYbub1orhdREe0WhPrC/BNR0IvmfSeKWRZk4HZv
lNva2pJyhW16XTnRZc84z9Oj9/l3e1zSDlzuw/M7v3O+5/zO+f7Oo/A/izIt/3V8CqxDxYdCJuB7
vj+KShwF+e8kSItXuy8G0EAm41QCX4Dm1IvEgTDpHKcMeXaV5ABq8JPCN9NwbHUkzssI8K0bAncA
tYRRtMhnQsIE+NLJkDOAOhqB0pnwPGlDpZEgZVabdgBJIp/32jx2vbOLkiUl5GbkMidtjmbv0egj
YoMxTt8+zYW7F9xxqxwnqNXSpJgB6Gfe4GShamUVewv3kjU7y9XBhDpB7M8Y+67vo/V+q5teSWJN
TAHQq/03a8FJ1PXr6ilZXEJaSpqnUxkaG+JQ9BBHYkec9OOks8TojikAdVQDX1l3NBU3sT13O6lK
qmnp8T+P6R7oJi8jj+y52SiYkxkfjxPqDlH7Q60TiK8JaP4SdtVp/ZqRqF29upoqXxWzUmeZjIw8
HdHSfOLmCfIz84l8HGHpG0ttju49uYe/00/H7x329gwwfwqAznCm6lmesZzIxgh5mXk2ww/+fkDp
xVLa+tu0tVuf3yJ/fr5NT0Xl3C/n2NaxzSkLWi3oeXOo/JAvxP7V+23Ri7oUW6QvQsXVCvYU7KGi
oMJRT3T7nvSxtX0r1waumUE87wgdQB2dGscnSMvGFjbnbPZUdMmURp+OUt1T7VSQlwhQbAC4C+Qk
Gur5rIdVb65ytS3p7R3qpfl2s5aBRa8vctR9pj6jpreG3Vd3W9ejBHjXAKBaV93OVfQGRgc4duMY
h2OHWf/Wepo/bHYFIPr1P9ZTfrncDjCAMm0AEtGVh1e06E/9dArhiZkAYDuC1k9a2ZC9wfUI+kf6
2Xlxp7aeDMDYxBgHvz/Ige8OWIswRhCfaxEeLTpKZUGlK/t5BTA4NkiwK8j5X89bg0koQoc23PT2
JhqKG1g4e6FjFrwC6HrYxdrIWrsNSxvaiEh2NBY3siN3BylKismA8MCdv+5QfkkvLLkrlmUss9Hx
8PgwoeshrQscJIGIdC6wUbHQ7NmPzlK4oNC034jeoFgBefL9k1pBGiIgz/x8htJOx7FimIA+3r3w
MpKjqPmghpy5UzQhxoVghAtEJEMyGxgXkrxvu9/GlrYtyKXlIA6XkX4dSzeYLiTZXJRVRPi9MGuy
1tjSbDUuwKQ9JfUuzodJZ7H9OhZLSQYSWZZUC/evWLDCxP0ScXwsTnt/u0ZQNt43o3QZSAwlj8Oo
MKDQrxxH9I8ovfFeV85IWJhMvfHu1Q2l0EQAvxXlqxrLbZEnz4Cxqg8qMqLbCtNLvoFhwP/fPkwM
D3p3yCgtP69AxLF8moVf7tPMGqZkRKUYBR8qmSis1FRUYijEUYmi0JksYu814DHHL6v2L11ZmjCA
SJiYAAAAAElFTkSuQmCC
</icon>

</service-task-definition>
