<?xml version="1.0" encoding="UTF-8"?><service-task-definition>

<label>Change Order of Tsv</label>
<label locale="ja">TSV の並び替え</label>

<last-modified>2018-11-15</last-modified>
<help-page-url>https://support.questetra.com/addons/tsv-changeorder/</help-page-url>
<help-page-url locale="ja">https://support.questetra.com/ja/addons/tsv-changeorder/</help-page-url>

<configs>
  <config name="conf_DataIdA" required="true" form-type="SELECT" select-data-type="STRING">
    <label>A: Select TSV STRING DATA</label>
    <label locale="ja">A: TSVデータが格納されている文字列型データ項目を選択してください</label>
  </config>
  <config name="conf_ColsOrder" required="true" form-type="TEXTFIELD">
    <label>B: Set Column ID Order (e.g. "0,1,5,3,6")</label>
    <label locale="ja">B: 新しい列順をセットしてください (例 "0,1,5,3,6")</label>
  </config>
  <config name="conf_DataIdC" required="true" form-type="SELECT" select-data-type="STRING_TEXTAREA">
    <label>C: Select STRING DATA for Generated TSV (update)</label>
    <label locale="ja">C: 生成TSVが格納される文字列型データ項目を選択してください（更新）</label>
  </config>
</configs>

<engine-type>1</engine-type>

<script><![CDATA[
// (c) 2018, Questetra, Inc. (the MIT License)


//////// START "main()" ////////
main();
function main(){


//// == Config Retrieving / 工程コンフィグの参照 ==
const dataIdA = configs.get( "conf_DataIdA" ) + "";
const dataIdC = configs.get( "conf_DataIdC" ) + "";
// 'java.lang.String' (String Obj) to javascript primitive 'string'
// https://wiki.openjdk.java.net/display/Nashorn/Rhino+Migration+Guide#RhinoMigrationGuide-JavaScriptvsJavaStrings
// https://docs.oracle.com/javase/8/docs/technotes/guides/scripting/nashorn/api.html#sthref21

const colsOrder = configs.get( "conf_ColsOrder" ) + "";
const arrColsOrder = colsOrder.split(",");


//// == Data Retrieving / ワークフローデータの参照 ==
let   myTsv  = engine.findDataByNumber( dataIdA );
if( myTsv  !== null ){ myTsv += ""; }else{
  throw new Error( "Source TSV data is NULL" );
}


//// == Calculating / 演算 ==
let   newTsv   = "";
const arrMyTsv = myTsv.split("\n"); // string[]

for( let i = 0; i < arrMyTsv.length; i++ ){
  let arrMyCellValues = arrMyTsv[i].split("\t");
  for( let j = 0; j < arrColsOrder.length; j++ ){
    newTsv += arrMyCellValues[ arrColsOrder[j] ];
    if( j !== arrColsOrder.length - 1 ){
      newTsv += "\t";
    }
  }
  if( i !== arrMyTsv.length - 1 ){
    newTsv += "\n";
  }
}


//// == Data Updating / ワークフローデータへの代入 ==
engine.setDataByNumber( dataIdC, newTsv );


} //////// END "main()" ////////

]]></script>


<icon>
iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAADV0lEQVRYR8WXTUgUYRjHf5O2aSBu
EiFWVBQRWPlBQfTBih8HO5UnQSjFw3gQK0FBUDNBQg9mltiC1HbQk2BaHQrygzqV4opdooMFKmER
KyIr1jbxzjg6+zHujJq9sOzCPvP8/8/z/p+PkfjPR7KF7+YK4EIhHQknkL7yvBcFHxLie5gy+q36
jU7gCU6WuQHcBBXUyvEBbTi4Twnit+lZn0Anxezgng3gUCABXoLMMzMG5gQe0YakRr4Vpw2ZW5Ec
RSbgxgNc3wrkVR8KHsooCfUZTsBm5Ak7E2g/387bb295/Onx+pwV7lOmamn1BBPQ7vyJ1cgFeG9e
L3kH8phZnKH8XTn9X6MWwFWjJtYIaGqfsio4I7iE5mbOP4c/4GdoZoiSkbBs63H5cHBEr441Am4a
gNtWoxd2Dy88pPREKXExcUGPBZQA3Z+7uT5sKqM7yCreCnXxy63Wa6IdAsLWk+Wh6FgRsTtigx71
//ZT+6GW1snWSC59yOxZI6B1uD674MI+/2A+Xa4uUnanGASv8GbmDQWvC1j4tWDmVtWCdgU2lW/0
WJ1WTU1GDU5HcJMc/T5K9otscwIrFaERcDOs9nibp+lsEzn7cxj4OkBVWlUQieU/yzR7m6kfrTfz
OoJMlk7gC3DIDr4ArzxdqQpw8uckfVN9pCalcjzxOKeSTqmuxn+M43ruMsuCF5kMnYCyUXC9/Gre
16iNqPBoIR0XO0jalcRSYInGsUbueu9Gdi8j2SZgjDwUXEcx2ggx5r7MjUrA0hVYAdeRXl1+pXbI
2cVZrg1dY3B2MJiEwgRlpFsWoR1wgXRu3zl6cnpIjk+mYayBlomW0CwYRBilDO2C60iNZxqpOFnB
g48PqButC82AOpj0DJg2oo2CCzQxLxIdiUwvTkfSgKERab0grBVvBjxKVc0ja+ud6TD6h+ACN8Iw
0saxqAZ1II0VjJG5N1MNRIxZvc7t9AsT23kcHA4fx8LasJCIIdN5qZP4mPitBBcoJguJTncTg8lC
dlZTr9tu31IKT5EpDiW5XWt5WOTrZ0D/V1tUxIpue1NacTEPFG/sxUQnoVWHWKXFxyoRASxezdo2
92oWemEiIwpZSKSj4EQiTTURg0XCh4IXieH1IrauAQuS3gqTvxXhUDBgMFNwAAAAAElFTkSuQmCC
</icon>

</service-task-definition>
